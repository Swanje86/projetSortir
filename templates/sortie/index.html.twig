{% extends 'base.html.twig' %}

{% block title %}Sorties | {{ parent() }}{% endblock %}

{% block body %}
    <div class="zone1">
        <p>Date du jour : {{ dateTime}} </p>
        <p>Participant :
                    {{ participant.prenom }} {{ participant.nom|slice(0, 1)}}. </p>
    </div>


<!--Zone de filtre-->

        <div class="row">
            <div class="col-md-4">
                <h4>Filtrer les sorties</h4>
                {{ form_start(form) }}
                <p>Site : {{ form_row(form.siteOrganisateur) }}</p>

                <p>Le nom de la sortie contient : {{ form_row(form.searchTerm) }}</p> {# TODO Nao : verifier que ça fonctionne bien #}
                <p>Entre {{ form_row(form.dateStartFilter) }} et  {{ form_row(form.dateEndFilter) }}</p>

            </div>
            <div class="col-md-4">
                {{form_row(form.conditions)}}
            </div>
            <div class="col-md-4">
               <button type="submit">Rechercher</button>
                {{ form_end(form) }}
            </div>
        </div>


<!-- zone d'affichage des sorties-->
        <table class="table table-success table-striped table-bordered">
            <thead>
            <tr>
               <th>Nom de la sortie</th>
               <th>Date</th>
               <th>Clôture</th>
               <th>Inscrits/places</th>
               <th>Etat</th>
                <th>Inscrit</th>
                <th>Organisateur</th>
               <th>Site organisateur</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            {# TODO nao : est ce qu'il faut que les filtres soient indépendants les un des autres ? site et rechereche par mot vont ensemble par ex#}
    {# TODO nao : beug sur la page d'accueil  #}
            {# quand on charge la page direct via url ça met erreur alors que quand on est deja dedans ça focntionne  #}
            {% for sortie in sorties %}

                <tr>
                    <td>{{ sortie.nomSortie }}</td>
                    <td>{{ sortie.dateHeureDebut|date('d/m/Y H:i') }}</td>
                    <td>{{ sortie.dateLimiteInscription|date('d/m/Y') }}</td>
                    <td>/{{ sortie.nbInscriptionsMax }}</td> {# TODO nao : rajouter les participants dans la case #}
                    <td> {{ sortie.libelle }}</td>
                    {# TODO nao : rajouter case si on y est inscrit #}
                    <td> </td>
                    {# TODO nao : rajouter organisateur #}
                    <td>
                   {{ sortie.prenom|capitalize }} {{ sortie.nom|slice(0, 1) |capitalize }}.
                    </td>
                    <td> {{ sortie.nomSite }} </td>

                    <td>
                        <a href="{{ path('app_sortie_details',{'id' : sortie.id}) }}"> <button type="submit"> Afficher </button></a>

                                 <a><button type="button" onclick="inscription({{ sortie.id }})"> S'inscrire </button></a>
                            {% if sortie.dateLimiteInscription > "now"|date("Y-m-d H:i:s") %}
                                <a><button type="button" onclick="desistement({{ sortie.id }})"> Se désister </button></a>

                            {% endif %}

                    </td>
                    <script>
                        function inscription(sortieId) {
                            fetch('/sortie/' + sortieId + '/inscription', {
                                method: 'POST',
                                headers: {
                                    'X-Requested-With': 'XMLHttpRequest',
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({})
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.status === 'inscrit') {
                                        alert('Inscription réussie!');
                                    } else if (data.status === 'already_inscrit') {
                                        alert('Vous êtes déjà inscrit.');
                                    } else {
                                        alert('Erreur: ' + data.message);
                                    }
                                })
                                .catch(error => console.error('Error:', error));
                        }

                        function desistement(sortieId) {
                            fetch('/sortie/' + sortieId + '/desistement', {
                                method: 'POST',
                                headers: {
                                    'X-Requested-With': 'XMLHttpRequest',
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({})
                            })
                                .then(response => response.json())
                                .then(data => {

                                    if (data.status === 'desinscrit') {
                                        alert ('Etes-vous sûr de vouloir vous désincrire ??');
                                        alert('Désinscription réussie!');
                                    } else if (data.status === 'not_inscrit') {
                                        alert('Vous n\'êtes pas inscrit.');
                                    } else {
                                        alert('Erreur: ' + data.message);
                                    }
                                })
                                .catch(error => console.error('Error:', error));
                        }
                    </script>
                </tr>
            {% endfor %}
        </table>

    <button type="submit">Créer une sortie</button>

{% endblock %}
